{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "reactStateless": {
    "prefix": "rstateless",
    "body": [
      "import * as React from 'react';",
      "",
      "const ${1:${TM_FILENAME_BASE}} = ({ $3 }) => (",
      "  <div className=\"$2\">",
      "    $4",
      "  </div>",
      ");",
      "",
      "export default $1;"
    ],
    "description": "React ES6 Functional Stateless Component"
  },
  "reactFunctionalWithHooks": {
    "prefix": "rfunc",
    "body": [
      "import * as React from 'react';",
      "import styled from '@emotion/styled';",
      "",
      "const ${6:Container} = styled.${5:div}`",
      "  $8",
      "`;",
      "",
      "const ${1:${TM_FILENAME_BASE}} = ({ $3 }) => {",
      "  $9",
      "",
      "  return (",
      "    <${4:Container}>",
      "      $7",
      "    </${4}>",
      "  );",
      "};",
      "",
      "export default $1;"
    ],
    "description": "React ES6 Functional Component"
  },
  "reactEmpty": {
    "prefix": "self",
    "body": ["<${1:div} className=\"$2\" />"],
    "description": "React Self Closing Component"
  },
  "reactUseState": {
    "prefix": "useState",
    "body": ["const [${1:state}, set${1/(.*)/${1:/capitalize}/}] = useState($4);"],
    "description": "React useState Hook"
  },
  "reactUseStore": {
    "prefix": "useStore",
    "body": ["const [${1:state}, set${1/(.*)/${1:/capitalize}/}] = useStore('$4', '$1');"],
    "description": "useStore Hook"
  },
  "reactClassName": {
    "prefix": "cn",
    "body": ["className=\"$1\""],
    "description": "React className prop"
  },
  "joinClass": {
    "prefix": "joinClass",
    "body": ["{joinClass(${CLIPBOARD/[\\\"]/'/g}, $1)}"],
    "description": "todo comment"
  },
  "TODO": {
    "prefix": "todo",
    "body": ["// TODO: $1"],
    "description": "todo comment"
  },
  "devonly": {
    "prefix": "devonly",
    "body": ["if (process.env.NODE_ENV === 'development') {", "  $1", "}"]
  },
  "styled component": {
    "prefix": "styled",
    "body": ["const ${1:Container} = styled.${2:div}`", "  $3", "`;"]
  }
}
